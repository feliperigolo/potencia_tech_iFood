def menu():
    print(20 * "=", "MENU", 20 * "=")
    menu = """\n
    [D]Depositar
    [S]Sacar
    [E]Extrato
    [NC]Nova conta
    [NU]Novo usuário
    [Q]Sair
    ==> """
    return input(menu)


def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: \tR$ {valor:.2f}\n"
        print("\nDepósito realizado com sucesso!")
    else:
        print("\nOperação não realizada! O valor informado é inválido.")

    return saldo, extrato


def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques > limite_saques

    if excedeu_saldo:
        print("\nOperação não realizada! Você não possui saldo suficiente.")

    elif excedeu_limite:
        print("\nOperação não realizada! O valor de saque excede o limite.")

    elif excedeu_saques:
        print("\nOperação não realizada! Número máximo de saques excedido.")

    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\t\t-R$ {valor:.2f}\n"
        numero_saques += 1
        print("\nOperação de saque realizada com sucesso!")

    else:
        print("\nOperação não realizada! O valor informado é inválido.")

    return saldo, extrato


def exibir_extrato(saldo, /, *, extrato):
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print(41 * "=")


def criar_usuario(usuarios):
    cpf = input("Digite o CPF (somente números): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\nErro! Já existe usuário(a) com esse CPF.")
        return
    
    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe e data de nascimento (dd/mm/aaaa): ")
    endereço = input("Informe o endereço completo (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereço": endereço})

    print("Usuário(a) cadastrado(a) com sucesso!")


def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Digite o CPF do usuário(a): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\nConta aberta com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}
    
    print("\nUsuário(a) não encontrado(a), operação de abertura de conta encerrada!")


def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor para depósito: R$ "))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: R$ "))

            if valor < 0:
                print("Valor inválido! Por favor tente novamente.")
            
            else:
                saldo, extrato = sacar(
                    saldo=saldo,
                    valor=valor,
                    extrato=extrato,
                    limite=limite,
                    numero_saques=numero_saques,
                    limite_saques=LIMITE_SAQUES,
                )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)
    
        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
        
            if conta:
                contas.append(conta)
    
        elif opcao == "q":
            print("Obrigado por ser nosso cliente! Volte sempre.")
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")


main()
